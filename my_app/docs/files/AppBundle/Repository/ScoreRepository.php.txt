<?php
/**
 * Baza zawodów.
 *
 * @author Dominika Skoczeń <doskoczen@gmail.com>
 */
namespace AppBundle\Repository;

use AppBundle\Entity\Score;
use Doctrine\ORM\EntityRepository;
use Pagerfanta\Adapter\DoctrineORMAdapter;
use Pagerfanta\Pagerfanta;

/**
 * ScoreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScoreRepository extends EntityRepository
{
    /**
     * Save entity.
     *
     * @param Score $score Score entity
     */
    public function save(Score $score)
    {
        $this->_em->persist($score);
        $this->_em->flush();
    }

    /**
     * Delete entity.
     *
     * @param Score $score Score entity
     */
    public function delete(Score $score)
    {
        $this->_em->remove($score);
        $this->_em->flush();
    }

    /**
     * Gets all records paginated.
     *
     * @param int $page Page number
     *
     * @return \Pagerfanta\Pagerfanta Result
     */
    public function findAllPaginated($page = 1)
    {
        $paginator = new Pagerfanta(new DoctrineORMAdapter($this->queryAll(), false));
        $paginator->setMaxPerPage(Score::NUM_ITEMS);
        $paginator->setCurrentPage($page);

        return $paginator;
    }

    /**
     * Gets score by contestant.
     *
     * @param string $id Contestant id
     *
     * @return \Doctrine\ORM\Query
     */
    public function findLastByContestant($id)
    {
        $qb = $this->createQueryBuilder('b');
        $qb->select('b')
            ->orderBy('b.id', 'DESC');

        return $qb->getQuery()->getResult();
    }

    /**
     * Query all entities.
     *
     * @return \Doctrine\ORM\Query
     */
    protected function queryAll()
    {
        $qb = $this->createQueryBuilder('b');
        $qb->select('b')
            ->orderBy('b.id', 'DESC');

        return $qb;
    }
}

